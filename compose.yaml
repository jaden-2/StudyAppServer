# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    ports:
      - 9000:9000
    image: study-app-api
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/study-app
      - SPRING_DATASOURCE_USERNAME=StudyApp
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
    restart: on-failure
  db:
    image: mysql:8.0
    ports:
      - 3390:3306
    # The default MySQL port is 3306, but we are mapping it to 3390 for this example.
    # You can change this to 3306 if you want to use the default port.
   
    environment:
      MYSQL_DATABASE: study-app
      MYSQL_USER: StudyApp
      MYSQL_PASSWORD: ${SPRING_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${SPRING_DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${SPRING_DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
  client:
    build:
      context: ../../React App/studyapp  # Adjust path to your Next.js project directory
      dockerfile: Dockerfile # (optional if named Dockerfile)
    ports:
      - 3000:3000
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:9000/api/studyApp
      NEXT_PUBLIC_API_SOCKET: ws://localhost:9000/ws-studyApp
    restart: unless-stopped
volumes:
  mysql_data:
